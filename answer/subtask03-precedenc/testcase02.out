> Create symbol table (scope level 0)
func: main
> Insert `main` (addr: -1) to scope level 0
> Create symbol table (scope level 1)
> Insert `argv` (addr: 0) to scope level 1
INT_LIT 3
INT_LIT 4
INT_LIT 5
INT_LIT 8
NEG
ADD
MUL
SUB
INT_LIT 10
INT_LIT 7
DIV
SUB
IDENT (name=endl, address=-1)
cout int string
INT_LIT 3
INT_LIT 4
INT_LIT 5
INT_LIT 8
NEG
ADD
MUL
SUB
INT_LIT 10
INT_LIT 7
DIV
SUB
INT_LIT 4
NEG
INT_LIT 3
REM
GTR
BOOL_LIT TRUE
NOT
BOOL_LIT FALSE
NOT
NOT
LAN
LOR
IDENT (name=endl, address=-1)
cout bool string
FLOAT_LIT 3.000000
FLOAT_LIT 4.000000
FLOAT_LIT 5.000000
FLOAT_LIT 8.000000
NEG
ADD
MUL
SUB
FLOAT_LIT 10.000000
FLOAT_LIT 7.000000
DIV
SUB
IDENT (name=endl, address=-1)
cout float string
FLOAT_LIT 3.000000
FLOAT_LIT 4.000000
FLOAT_LIT 5.000000
FLOAT_LIT 8.000000
NEG
ADD
MUL
SUB
FLOAT_LIT 10.000000
FLOAT_LIT 7.000000
DIV
SUB
FLOAT_LIT 4.000000
NEG
GTR
BOOL_LIT TRUE
NOT
BOOL_LIT FALSE
NOT
NOT
LAN
LOR
IDENT (name=endl, address=-1)
cout bool string
INT_LIT 1000000
INT_LIT 9
INT_LIT 1
MUL
ADD
INT_LIT 1
SUB
INT_LIT 2024
ADD
INT_LIT 398
NEG
ADD
INT_LIT 88
INT_LIT 2
REM
INT_LIT 0
NEQ
ADD
INT_LIT 8888889
INT_LIT 2
REM
INT_LIT 0
NEQ
ADD
IDENT (name=endl, address=-1)
cout int string
INT_LIT 0
RETURN

> Dump symbol table (scope level: 1)
Index     Name                Type      Addr      Lineno    Func_sig  
0         argv                string    0         1         -         

> Dump symbol table (scope level: 0)
Index     Name                Type      Addr      Lineno    Func_sig  
0         main                function  -1        1         ([Ljava/lang/String;)I
Total lines: 10
