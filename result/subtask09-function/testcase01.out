> Create symbol table (scope level 0)
func: check
> Insert `check` (addr: -1) to scope level 0
> Create symbol table (scope level 1)
> Insert `a` (addr: 0) to scope level 1
> Insert `b` (addr: 1) to scope level 1
> Insert `s` (addr: 2) to scope level 1
> Insert `c` (addr: 3) to scope level 1
IDENT (name=s, address=2)
IDENT (name=endl, address=-1)
cout string string
IDENT (name=a, address=0)
STR_LIT " "
IDENT (name=b, address=1)
STR_LIT " "
IDENT (name=s, address=2)
IDENT (name=endl, address=-1)
cout int string int string string string
IDENT (name=c, address=3)
BOOL_LIT TRUE
EQL
RETURN

> Dump symbol table (scope level: 1)
Index     Name                Type      Addr      Lineno    Func_sig  
0         a                   int       0         1         -         
1         b                   int       1         1         -         
2         s                   string    2         1         -         
3         c                   bool      3         1         -         
func: main
> Insert `main` (addr: -1) to scope level 0
> Create symbol table (scope level 1)
> Insert `argv` (addr: 4) to scope level 1
INT_LIT 1
INT_LIT 2
STR_LIT "apple"
BOOL_LIT TRUE
IDENT (name=check, address=-1)
call: check(IILjava/lang/String;B)B
> Insert `result` (addr: 5) to scope level 1
IDENT (name=result, address=5)
INT_LIT 7
ADD
> Insert `num` (addr: 6) to scope level 1
IDENT (name=num, address=6)
IDENT (name=endl, address=-1)
cout int string
INT_LIT 0
RETURN

> Dump symbol table (scope level: 1)
Index     Name                Type      Addr      Lineno    Func_sig  
0         argv                string    4         6         -         
1         result              bool      5         7         -         
2         num                 int       6         8         -         

> Dump symbol table (scope level: 0)
Index     Name                Type      Addr      Lineno    Func_sig  
0         check               function  -1        1         (IILjava/lang/String;B)B
1         main                function  -1        6         ([Ljava/lang/String;)I
Total lines: 12
